openapi: 3.0.3
info:
  title: TestReportBoard API
  version: 1.0.0
  description: API for test reporting
paths:
  /health/api:
    get:
      operationId: health_api_retrieve
      tags:
      - health
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /testcases/api/list:
    get:
      operationId: testcases_api_list_retrieve
      description: List all test_cases
      tags:
      - testcases
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestCase'
          description: ''
  /testcases/api/testcase:
    post:
      operationId: testcases_api_testcase_create
      tags:
      - testcases
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestCase'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TestCase'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TestCase'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestCase'
          description: ''
  /testcases/api/testcase/{id}:
    get:
      operationId: testcases_api_testcase_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - testcases
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestCase'
          description: ''
    put:
      operationId: testcases_api_testcase_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - testcases
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestCase'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TestCase'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TestCase'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestCase'
          description: ''
    delete:
      operationId: testcases_api_testcase_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - testcases
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /testcases/api/testcase/{test_id}/list:
    get:
      operationId: testcases_api_testcase_list_retrieve
      description: List all test runs for test case
      parameters:
      - in: path
        name: test_id
        schema:
          type: integer
        required: true
      tags:
      - testcases
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestRun'
          description: ''
  /testcases/api/testcase/{test_id}/testrun:
    post:
      operationId: testcases_api_testcase_testrun_create
      parameters:
      - in: path
        name: test_id
        schema:
          type: integer
        required: true
      tags:
      - testcases
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestRun'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TestRun'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TestRun'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestRun'
          description: ''
  /testcases/api/testcase/testrun/{test_id}:
    get:
      operationId: testcases_api_testcase_testrun_retrieve
      parameters:
      - in: path
        name: test_id
        schema:
          type: integer
        required: true
      tags:
      - testcases
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestRun'
          description: ''
    put:
      operationId: testcases_api_testcase_testrun_update
      parameters:
      - in: path
        name: test_id
        schema:
          type: integer
        required: true
      tags:
      - testcases
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestRun'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TestRun'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TestRun'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestRun'
          description: ''
    delete:
      operationId: testcases_api_testcase_testrun_destroy
      parameters:
      - in: path
        name: test_id
        schema:
          type: integer
        required: true
      tags:
      - testcases
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    StatusEnum:
      enum:
      - PASS
      - FAIL
      - ERROR
      - UNKNOWN
      - XFAIL
      - XPASS
      - SKIPPED
      - INPROGRESS
      type: string
      description: |-
        * `PASS` - Pass
        * `FAIL` - Fail
        * `ERROR` - Error
        * `UNKNOWN` - Unknown
        * `XFAIL` - Xfail
        * `XPASS` - Xpass
        * `SKIPPED` - Skipped
        * `INPROGRESS` - Inprogress
    TestCase:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 30
        relative_path:
          type: string
          maxLength: 300
        create_date:
          type: string
          format: date-time
      required:
      - id
      - name
      - relative_path
    TestRun:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        suite_id:
          type: string
          maxLength: 30
        test_id:
          type: integer
          nullable: true
        status:
          $ref: '#/components/schemas/StatusEnum'
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
          nullable: true
        marks:
          type: string
          maxLength: 30
        product_version:
          type: string
          maxLength: 30
        environment:
          type: string
          maxLength: 200
        defects:
          type: string
          maxLength: 100
      required:
      - id
      - suite_id
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
